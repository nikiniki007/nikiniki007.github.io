@charset "UTF-8";

:root{/* 変数を登録（色の指定）、呼び出しはvarで*/
--header_color:#c3e6d7;
--footer_color:#c3e6d7;
--nav_color:#e5cfcf;
--content-txt_1:#dde6b8;
--content-txt_2:#e5dab8;
--content-txt_3:#cfc3e5;

}/* cssではletの代わりに--で関数 */

html{box-sizing:border-box;-webkit-text-size-adjust:100%}*,:after,:before{background-repeat:no-repeat;box-sizing:inherit}:after,:before{text-decoration:inherit;vertical-align:inherit}*{padding:0;margin:0;box-sizing:border-box;}audio:not([controls]){display:none;height:0}hr{overflow:visible}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}summary{display:list-item}small{font-size:80%}[hidden],template{display:none}abbr[title]{border-bottom:1px dotted;text-decoration:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}code,kbd,pre,samp{font-family:monospace,monospace}b,strong{font-weight:bolder}dfn{font-style:italic}mark{background-color:#ff0;color:#000}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}input{border-radius:0}[role=button],[type=button],[type=reset],[type=submit],button{cursor:pointer}[disabled]{cursor:default}[type=number]{width:auto}[type=search][type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}textarea{overflow:auto;resize:vertical}button,input,optgroup,select,textarea{font:inherit}optgroup{font-weight:700}button{overflow:visible}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:0;padding:0}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button:-moz-focusring{outline:1px dotted}[type=reset],[type=submit],button,html [type=button]button,select{text-transform:none}button,input,select,textarea{background-color:transparent;border-style:none;color:inherit}select::-ms-expand{display:none}select::-ms-value{color:currentColor}legend{border:0;color:inherit;display:table;max-width:100%;white-space:normal}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}[type=search]img{border-style:none;vertical-align: bottom}progress{vertical-align:baseline}svg:not(:root){overflow:hidden}audio,canvas,progress,video{display:inline-block}@media screen{[hidden~=screen]{display:inherit}[hidden~=screen]:not(:active):not(:focus):not(:target){position:absolute!important;clip:rect(0 0 0 0)!important}}[aria-busy=true]{cursor:progress}[aria-controls]{cursor:pointer}[aria-disabled]{cursor:default}::-moz-selection{background-color:#b3d4fc;color:#000;text-shadow:none}::selection{background-color:#b3d4fc;color:#000;text-shadow:none}ul,ol{list-style:none;}a{text-decoration:none;}img{max-width: 100%;vertical-align: bottom;}

/* 検証確認用
body{
background-color: var(--header_color);
}
@media (min-width:600px){スマホ記述が先の時はmin（600px以下になったら）
body{
background-color: var(--nav_color);
}
}
@media(min-width:800px){
body{
background-color: var(--content-txt_1);  
}
} */


body{
font-family: "Roboto Slab", serif;
color: #222;
overflow-x: hidden;/* はみ出た部分を隠す */
}

/* spレイアウト */
header{
width: 100%;/* positionの指定には幅が絶対必要 */
height: 60px;
background-color: var(--header_color);
padding: 0 10px;
display: flex;
justify-content: space-between;
align-items: center;/* h1とhamが垂直方向のみ真ん中になる */
position: sticky;/* fixed=固定。sticky=ねばつく */
top: 0;
z-index: calc(infinity);/* とにかくz-indexが一番大きくなる */
@media (min-width:900px){
height: 100px;
position: static;
}
}

h1{
width: 50%;/* もとfont-size: 28px;、←イラレで作ったロゴに変えたので不要になった */
height: 40px;/* svg画像ではサイズを自由に変えられる */
background: url(../img/logo.svg)no-repeat left center/contain;/* leftが横でcenterが縦 */
/* coverはサイズによってははみ出て見切れたりする、containは崩さない */
text-indent: 100%;
white-space: nowrap;
overflow: hidden;/* ←↑隠すもの三点セット */
@media (min-width:900px){
width: 100%;
height: 60px;
background: url(../img/logo.svg)no-repeat center center/contain;
}
}
#ham-btn{
width: 44px;
height: 44px;
/* border: 2px solid #222; */
position: relative;/* 基準点の設定 */
>span{
display: block;
width: 20px;
height: 2px;
background-color: #222;
position: absolute;/* spanをabsoで動かす */
inset: 0;
margin: auto;
top: -12px;/* topにマイナス-の値を入れると上に動く */
transition: 0.2s;
&::after{/* ここnest */
display: block;
content: "";
width: 20px;
height: 2px;
background-color: #222;
position: absolute;
top: 12px;/* hamburgerの二本線、等間隔が絶対条件 */
transition: 0.2s;
}
}

&.is-active>span{/* & = #ham-btnの意 */
top: 0;
rotate: -225deg;/* codepen、二本verより（-225deg）45刻みで */
&::after{
top: 0;/* いったん真ん中に戻す */
rotate: 90deg;
}
}
@media (min-width:900px){
display: none;/* 要素を非表示（900px以上になると"三"が消える） */
}
}

/* ナビゲーション部分 */
#pc-nav{
display: none;
@media (min-width:900px){
width: 100%;
display: block;
height: 50px;
background-color: var(--nav_color);
position: sticky;/* 指定した位置に来たらnavを固定 */
top: 0;
>ul{
display: flex;
justify-content: center;
align-items: center;
gap: 0 20px;
 a{
 display: block;
 overflow: hidden;
 padding: 10px 16px;
 color: #222;
 position: relative;
 &::after{
 display: block;
 content:"";
 width: 100%;
 height: 8px;
 background-color: #ff0;
 position: absolute;
 inset: 0;
 margin: auto;
 top: 30px;
 scale: 0;
 translate: -110% 0;
 transition: 0.2s;
}
&:hover::after{
translate: 0 0;
/* scale: 1;アニメーション */
}
}
}
}
}


/* sp用ナビ */
#g-nav{
/* display: none; *//* id g-navを非表示にしたい */
width: 100%;
height: calc(100vh - 60px);
background-color: var(--nav_color);
position: fixed;
top: 60px;
left: 0;
z-index: calc(infinity);/* z-indexが1番大きくなる */
padding: 40px 20px;
translate: 100% 0;
 li{/* 子孫セレクタ */
margin-bottom: 10px;
>a{
/* background-color: #ff0; */  
border-bottom: 2px solid;  
display: block;
padding: 10px 0 10px 10px;
color: #222;
}
}
&.move{/* 移動をしてない状態（0）に戻す */
  translate: 0 0;
  transition: 0.2s;
}
@media (min-width:900px){
display: none;/* 要素を非表示に */


}
}






/* main部分 */
main{
padding: 10px 10px 0 10px;
}
.content-wrapper{
margin-bottom: 10px;
&:nth-of-type(2)>.content-txt{/* 部分的(2個目のcontent-txt)に色を変えたいときはnthを使う */
background-color: var(--content-txt_2);
}
@media (min-width:680px){
display: flex;
justify-content: space-between;
&:nth-of-type(even){/* 偶数 */
flex-direction: row-reverse;/* 横並び、かつ逆 */
}
}
}

.content-img{
height: 45vh;
margin-bottom: 10px;
>img{
object-fit: cover;/* ←ここ3点セットで覚える */
width: 100%;
height: 100%;
}
@media (min-width:680px){
width: calc((100% - 20px) / 3 * 2 + 10px);
height: 90vh;
margin-bottom: 0;
} 
}

.content-txt{
background-color: var(--content-txt_1);
height: calc(100vh - 90px - 45vh);/* 45vh(画像分)をひく */
display: flex;
flex-direction: column;
justify-content: center;/* 縦 */
text-align: center;
>h2{/* content-txtの中の子供のh2 */
margin-bottom: 20px;
}
>p{
padding: 0 20px;
line-height: 1.8;
}
@media (min-width:680px){
width: calc((100% - 20px) / 3 );
height: auto;
}
}

/* col-1部分 */
.col-1{
margin-bottom: 10px;
background-color: var(--nav_color);
padding: 20vh 20px;
text-align: center;
line-height: 1.8;/* 文字関係は親に命令すれば子供にも反映される */
>h2{
margin-bottom: 40px;
}
}

/* col-3部分 */
@media (min-width:900px){
.col-3-wrapper{
display: flex;
gap: 0 10px;
>.col-3-box{
width: calc((100% - 20px) / 3);/* 三等分 */
display: block;
}
}
}

.col-3-box{
margin-bottom: 10px;
&:nth-of-type(2) .icon{/* nthを使うときは&から */
background: #fff url(../img/icon-2.svg) no-repeat center center/50px;
}
&:nth-of-type(3) .icon{/* ← .iconの余白はただの余白ではなく子孫セレクタの意 */
background: #fff url(../img/icon-3.svg) no-repeat center center/50px;
}
@media (min-width:680px){
display: flex;
}
}
.col-3-img{
height: 35vh;
>img{
object-fit: cover;
width: 100%;
height: 100%;
}
@media (min-width:680px){
width: 50%;
height: 80vh;
}
@media (min-width:900px){
width: 100%;
height: 40vh;
}
}
.col-3-txt{
height: 320px;/* ←スマホで楕円になってたところ。実機じゃないとわからない部分 */
background-color: var(--content-txt_3);
display: flex;
flex-direction: column;/* 縦に */
justify-content: center;
text-align: center;
>h3{
margin-bottom: 20px;
font-size: 26px;
}
>.icon{
width: 100px;
height: 100px;
border-radius: 50%;/* 50%で円になる */
margin: 0 auto 20px;
background: #fff url(../img/icon-1.svg) no-repeat center center/40px;/* backgroundでひとまとめ */
text-indent: 100%;/* 100%にすると必ず右側に一個分ずれる */
white-space: nowrap;/* 改行"無効"の処理 */
overflow: hidden;
}
@media (min-width:680px){
width: 50%;
height: auto;
}
@media (min-width:900px){
width: 100%;
height: 340px;
}

}

/* ボタンのスタイル */
.to-more{
width: 50%;
margin: 0 auto;
background-color: #d1d1d1;
border-radius: 100px;/* かどまる */
>a{
display: block;
padding: 16px 0;
color: #222;
&::after{
display: inline-block;/* 普通のblockだとはみ出てしまうので */
content: "";
width: 12px;
height: 12px;
border-top: 2px solid #222;
border-right: 2px solid #222;
rotate: 45deg;
margin-left: 20px;
}
}
}

/* お申込みボタン(https://buildstd.com/css-button/より)*/
.to-form{
margin-top: 20px;  
}
.to-form>a{
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin: 0 auto;
  padding: 0.8em 1.6em;/* この辺サイズの微調整 */
  width: 300px;
  color: #333;
  font-size: 18px;
  font-weight: 700;
  background-color: #cccccc;
  border-radius: 50vh;
  transition: 0.3s;
  position: relative;
  /* margin-top: 30px */
}
.to-form>a::after {
  content: '';
  width: 5px;
  height: 5px;
  border-top: 3px solid #333333;
  border-right: 3px solid #333333;
  transform: rotate(45deg);
  position: absolute;
  right: 5%;
}
.to-form>a:hover {
  text-decoration: none;
  background-color: #bbbbbb;
}

footer{
background-color: var(--footer_color);
padding: 40px 0;
margin: 0 10px 10px;
>p{
text-align: center;
font-size: 16px;
}
}

/* ローディングアニメーション */
#curtain{
width: 100%;
height: 100vh;
background-color: var(--header_color);
position: fixed;
top: 0;
left: 0;
z-index: calc(infinity);
}
#logo-box{
max-width: 500px;
margin: 200px auto 0;
 path{
fill: var(--header_color);/* fill=塗りの色 */
stroke: #222;/* stroke=線の色 */
stroke-dasharray: 200px;/* pathの長さ */
stroke-dashoffset: 200px;/* ←↑と揃える */
animation: svg 1.8s 0.5s linear forwards;/* forwards=一度アニメーションしたらずっとそのままになる */
 }/* ↑0.5sは遅延の秒数。0.5秒経ってから1.8秒かけてアニメーションが動く */
}

@keyframes svg{
0%{stroke-dashoffset: 200px;}
80%{stroke-dashoffset: 0;fill: var(--header_color);}
100%{stroke-dashoffset: 0;fill:#222;}
}




/* @media (max-width:800px){}

@media (min-width:600px){} */